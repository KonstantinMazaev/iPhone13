@font-face {
  font-family: "SF UI Text";
  src: url("../fonts/SFUIText-Light.eot");
  src: url("../fonts/SFUIText-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/SFUIText-Light.woff2") format("woff2"), url("../fonts/SFUIText-Light.woff") format("woff"), url("../fonts/SFUIText-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "SF UI Text";
  src: url("../fonts/SFUIText-Regular.eot");
  src: url("../fonts/SFUIText-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/SFUIText-Regular.woff2") format("woff2"), url("../fonts/SFUIText-Regular.woff") format("woff"), url("../fonts/SFUIText-Regular.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "SF UI Text";
  src: url("../fonts/SFUIText-Medium.eot");
  src: url("../fonts/SFUIText-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/SFUIText-Medium.woff2") format("woff2"), url("../fonts/SFUIText-Medium.woff") format("woff"), url("../fonts/SFUIText-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

html {
  font: normal normal 0.625vw "SF UI Text", sans-serif;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  scroll-behavior: smooth;
  text-rendering: auto;
  margin: 0;
  padding: 0;
  height: 100%;
  -webkit-text-size-adjust: 100%;
}

*,
*::after,
*::before {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

*:focus:not(:focus-visible) {
  outline: none;
}

body {
  background: #FFFFFF;
  font-style: normal;
  font-weight: normal;
  text-rendering: auto;
  margin: 0;
  padding: 0;
  height: 100%;
  color: #000000;
}

a,
a:hover {
  text-decoration: none;
}

input,
textarea {
  line-height: inherit;
  margin: 0;
  padding: 0;
}

input,
button {
  border: none;
  outline: none;
  cursor: pointer;
}

button,
input,
a,
textarea {
  outline: none;
  cursor: pointer;
  font: inherit;
  color: inherit;
}

button:focus,
input:focus,
a:focus,
textarea:focus {
  outline: none;
}

button:active,
input:active,
a:active,
textarea:active {
  outline: none;
}

img {
  width: 100%;
  height: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font: inherit;
  margin: 0;
  padding: 0;
}

p {
  margin-top: 0;
  margin-bottom: 0;
}

code,
kbd,
samp {
  font: inherit monospace, monospace;
}

button {
  background: inherit;
  border: none;
  color: inherit;
  font: inherit;
  text-align: inherit;
  padding: 0;
  text-rendering: auto;
}

ul {
  padding: 0;
  margin: 0;
}

ul li {
  margin: 0;
  padding: 0;
  list-style: none;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

#overlay {
  background: rgba(44, 52, 73, 0.75);
  display: none;
  position: absolute;
  z-index: 2;
  top: 13rem;
  right: 0;
  bottom: 0;
  left: 0;
}

#overlay.active {
  display: block;
}

.wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
}

main {
  -webkit-box-flex: 1;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.container {
  width: 129rem;
  margin: 0 auto;
}

.none {
  display: none !important;
}

.block {
  display: block !important;
}

.title {
  font-weight: 500;
  font-size: 3.4rem;
  line-height: 4.1rem;
}

.img {
  width: 50rem;
}

.header {
  padding: 3rem 0;
  margin-bottom: 10rem;
}

.header__wrap {
  position: relative;
  width: 113rem;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.icon-apple {
  height: 4rem;
  width: 3.5rem;
}

.nav {
  font-weight: 400;
  font-size: 2rem;
  line-height: 2.4rem;
}

.nav__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.nav__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.nav__item:not(:last-child)::after {
  content: "";
  display: block;
  width: 0.1rem;
  height: 4rem;
  background: #C9C9C9;
  margin: 0 2.5rem;
}

.hamburger {
  display: none;
}

.hamburger .line {
  background: #000;
  width: 8rem;
  height: 1rem;
  display: block;
  margin: 1rem auto;
  -webkit-transition: all 0.3s ease-in-out;
  -o-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.card__img {
  width: 10rem;
}

.offer__wrap {
  height: 79.1rem;
  background: url("../img/phones.jpg") no-repeat bottom/contain;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.main__title {
  font-weight: 500;
  font-size: 2rem;
  line-height: 2.4rem;
  margin-bottom: 2.4rem;
}

.offer__title {
  margin-bottom: 2.4rem;
}

.offer__price {
  font-weight: 300;
  font-size: 2rem;
  line-height: 2.3rem;
  margin-bottom: 2.3rem;
}

.btn {
  cursor: pointer;
  padding: 1.8rem 2.3rem;
  background: #0071E3;
  border-radius: 3rem;
  font-weight: 500;
  font-size: 2rem;
  line-height: 2.3rem;
  color: #FFFFFF;
}

@supports (-webkit-appearance:none) {
  .offer__wrap {
    background: url("../img/phones.webp") no-repeat bottom/contain;
  }
}

@media (max-width: 25.875em) {
  html {
    font-size: 1.5625vw;
  }

  .container {
    padding: 0 1.5rem;
    width: 100%;
  }

  .title {
    font-weight: 500;
    font-size: 6rem;
    line-height: 8.2rem;
    text-align: center;
  }

  .wrapper {
    overflow: hidden;
  }

  .header__wrap {
    width: 100%;
  }

  .nav {
    font-weight: 400;
    font-size: 4rem;
    line-height: 4.8rem;
    z-index: 2;
    position: absolute;
    top: 10rem;
    left: -1.5rem;
    right: -1.5rem;
    background-color: #fff;
    -webkit-transform: translateX(100%);
    -ms-transform: translateX(100%);
    transform: translateX(100%);
    padding: 3rem;
  }

  .nav.active {
    -webkit-transform: translateX(0%);
    -ms-transform: translateX(0%);
    transform: translateX(0%);
    -webkit-transition: 0.5s;
    -o-transition: 0.5s;
    transition: 0.5s;
  }

  .nav__list {
    display: block;
  }

  .nav__item:not(:last-child) {
    margin-bottom: 3rem;
  }

  .nav__item:not(:last-child)::after {
    display: none;
  }

  .hamburger {
    display: block;
  }

  .hamburger.active .line:nth-child(1) {
    -webkit-transform: translateY(2rem) rotate(45deg);
    -ms-transform: translateY(2rem) rotate(45deg);
    transform: translateY(2rem) rotate(45deg);
  }

  .hamburger.active .line:nth-child(2) {
    opacity: 0;
  }

  .hamburger.active .line:nth-child(3) {
    -webkit-transform: translateY(-2rem) rotate(-45deg);
    -ms-transform: translateY(-2rem) rotate(-45deg);
    transform: translateY(-2rem) rotate(-45deg);
  }

  .icon-apple {
    height: 6rem;
    width: 5.5rem;
  }

  .offer__wrap {
    height: 65rem;
  }

  .main__title {
    font-weight: 500;
    font-size: 4rem;
    line-height: 4.8rem;
  }

  .offer__price {
    font-size: 4rem;
    margin-bottom: 4.6rem;
  }

@supports (-webkit-appearance:none) {

}
}

@media (min-width: 25.9375em) and (max-width: 48em) {
  html {
    font-size: 1.20773vw;
    -webkit-text-size-adjust: none;
  }

  .container {
    padding: 0 3rem;
    width: 100%;
  }

  .header__wrap {
    width: 100%;
  }

  .offer__wrap {
    height: 60rem;
  }

@supports (-webkit-appearance:none) {

}
}

@media (min-width: 48.0625em) and (max-width: 64em) {
  html {
    font-size: 0.651042vw;
  }

@supports (-webkit-appearance:none) {

}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldHRpbmdzL2ZvbnRzLnNjc3MiLCJzdHlsZS5jc3MiLCJzZXR0aW5ncy9zZXQuc2NzcyIsInNldHRpbmdzL3Zhci5zY3NzIiwiYmxvY2tzL3RpdGxlLnNjc3MiLCJzZXR0aW5ncy9taXhpbnMuc2NzcyIsImJsb2Nrcy9pbWcuc2NzcyIsImJsb2Nrcy9oZWFkZXIuc2NzcyIsImJsb2Nrcy9mZWF0dXJlcy5zY3NzIiwiYmxvY2tzL29mZmVyLnNjc3MiLCJibG9ja3MvYnRuLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLHVDQUFBO0VBQ0EsMk9BQUE7RUFJQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNGSjtBREtBO0VBQ0kseUJBQUE7RUFDQSx5Q0FBQTtFQUNBLG1QQUFBO0VBSUEsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FDTko7QURTRTtFQUNFLHlCQUFBO0VBQ0Esd0NBQUE7RUFDQSwrT0FBQTtFQUlBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQ1ZKO0FDckJBO0VBQ0ksOEJBQUE7VUFBQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxvQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLDhCQUFBO0FEdUJKOztBQ3BCQTs7O0VBR0ksMkJBQUE7VUFBQSxtQkFBQTtBRHVCSjs7QUNwQkE7RUFDSSxhQUFBO0FEdUJKOztBQ3BCQTtFQUNJLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxvQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGNDakNVO0VEa0NWLHlCQy9CVTtBRnNEZDs7QUNwQkE7O0VBRUkscUJBQUE7QUR1Qko7O0FDcEJBOztFQUVJLG9CQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7QUR1Qko7O0FDcEJBOztFQUVJLFlBQUE7RUFDQSxhQUFBO0VBQ0EsZUFB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O0lKekJsQixlSXlCdUI7SUp4QnZCLG1CSXdCNkI7RVIwWC9COztFUXhYRTtJQUNJLGVBQUE7SUFDQSxxQkFBQTtFUjJYTjtBQUNGO0FJOVlJO0VJdUJBO0lBQ0ksYUFBQTtFUjBYTjtBQUNGO0FTaGFBO0VBQ0ksZUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJQRlM7RU9HVCxtQkFBQTtFTEhBLGdCS0ljO0VMSGQsZUtHbUI7RUxGbkIsbUJLRXlCO0VBQ3pCLGNQSFU7QUZ1YWQ7QUFDQTtBQUNBLGFBQWEsNkRBQTZEO0FBQzFFOztDQUVDOztBQUVEOztBQUVBOztBQUVBOztDQUVDOztBQUVEOztBQUVBOztBQUVBOztDQUVDOztBQUVEOztBQUVBOztBQUVBIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdTRiBVSSBUZXh0JztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9TRlVJVGV4dC1MaWdodC5lb3QnKTtcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9TRlVJVGV4dC1MaWdodC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxyXG4gICAgICAgIHVybCgnLi4vZm9udHMvU0ZVSVRleHQtTGlnaHQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9TRlVJVGV4dC1MaWdodC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9TRlVJVGV4dC1MaWdodC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnU0YgVUkgVGV4dCc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvU0ZVSVRleHQtUmVndWxhci5lb3QnKTtcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9TRlVJVGV4dC1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9TRlVJVGV4dC1SZWd1bGFyLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgIHVybCgnLi4vZm9udHMvU0ZVSVRleHQtUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9TRlVJVGV4dC1SZWd1bGFyLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuICBcclxuICBAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnU0YgVUkgVGV4dCc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvU0ZVSVRleHQtTWVkaXVtLmVvdCcpO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL1NGVUlUZXh0LU1lZGl1bS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxyXG4gICAgICAgIHVybCgnLi4vZm9udHMvU0ZVSVRleHQtTWVkaXVtLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgIHVybCgnLi4vZm9udHMvU0ZVSVRleHQtTWVkaXVtLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnRzL1NGVUlUZXh0LU1lZGl1bS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG4gIH1cclxuIiwiQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlNGIFVJIFRleHRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9TRlVJVGV4dC1MaWdodC5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvU0ZVSVRleHQtTGlnaHQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvU0ZVSVRleHQtTGlnaHQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL1NGVUlUZXh0LUxpZ2h0LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvU0ZVSVRleHQtTGlnaHQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJTRiBVSSBUZXh0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvU0ZVSVRleHQtUmVndWxhci5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvU0ZVSVRleHQtUmVndWxhci5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9TRlVJVGV4dC1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9TRlVJVGV4dC1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvU0ZVSVRleHQtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlNGIFVJIFRleHRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9TRlVJVGV4dC1NZWRpdW0uZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1NGVUlUZXh0LU1lZGl1bS5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9TRlVJVGV4dC1NZWRpdW0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL1NGVUlUZXh0LU1lZGl1bS53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL1NGVUlUZXh0LU1lZGl1bS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xuICBmb250LXNpemU6IDAuNjI1dnc7XG4gIGZvbnQtZmFtaWx5OiBcIlNGIFVJIFRleHRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cblxuKixcbio6OmFmdGVyLFxuKjo6YmVmb3JlIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuKjpmb2N1czpub3QoOmZvY3VzLXZpc2libGUpIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuYm9keSB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgdGV4dC1yZW5kZXJpbmc6IGF1dG87XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbn1cblxuYSxcbmE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmlucHV0LFxudGV4dGFyZWEge1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5pbnB1dCxcbmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5idXR0b24sXG5pbnB1dCxcbmEsXG50ZXh0YXJlYSB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udDogaW5oZXJpdDtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5idXR0b246Zm9jdXMsXG5pbnB1dDpmb2N1cyxcbmE6Zm9jdXMsXG50ZXh0YXJlYTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5idXR0b246YWN0aXZlLFxuaW5wdXQ6YWN0aXZlLFxuYTphY3RpdmUsXG50ZXh0YXJlYTphY3RpdmUge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250OiBpbmhlcml0O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbnAge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xufVxuXG5idXR0b24ge1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250OiBpbmhlcml0O1xuICB0ZXh0LWFsaWduOiBpbmhlcml0O1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbn1cblxudWwge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG51bCBsaSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBtYXJnaW46IDA7XG59XG5cbmlucHV0W3R5cGU9bnVtYmVyXSB7XG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuXG4jb3ZlcmxheSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMjtcbiAgdG9wOiAxM3JlbTtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0NCwgNTIsIDczLCAwLjc1KTtcbn1cblxuI292ZXJsYXkuYWN0aXZlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi53cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5tYWluIHtcbiAgZmxleDogMSAwIGF1dG87XG59XG5cbmZvb3RlciB7XG4gIGZsZXg6IDAgMCBhdXRvO1xufVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEyOXJlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNS44NzVlbSkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDEuNTYyNXZ3O1xuICB9XG5cbiAgLmNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMCAxLjVyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAyNS45Mzc1ZW0pIGFuZCAobWF4LXdpZHRoOiA0OGVtKSB7XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMS4yMDc3M3Z3O1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgfVxuXG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDAgM3JlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDQ4LjA2MjVlbSkgYW5kIChtYXgtd2lkdGg6IDY0ZW0pIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAwLjY1MTA0MnZ3O1xuICB9XG59XG4ubm9uZSB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbn1cblxuLnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAzLjRyZW07XG4gIGxpbmUtaGVpZ2h0OiA0LjFyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNS44NzVlbSkge1xuICAudGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiA2cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiA4LjJyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4uaW1nIHtcbiAgd2lkdGg6IDUwcmVtO1xufVxuXG4uaGVhZGVyIHtcbiAgcGFkZGluZzogM3JlbSAwO1xuICBtYXJnaW4tYm90dG9tOiAxMHJlbTtcbn1cblxuLmhlYWRlcl9fd3JhcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDExM3JlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmljb24tYXBwbGUge1xuICBoZWlnaHQ6IDRyZW07XG4gIHdpZHRoOiAzLjVyZW07XG59XG5cbi5uYXYge1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDJyZW07XG4gIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG59XG5cbi5uYXZfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubmF2X19pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMC4xcmVtO1xuICBoZWlnaHQ6IDRyZW07XG4gIGJhY2tncm91bmQ6ICNDOUM5Qzk7XG4gIG1hcmdpbjogMCAyLjVyZW07XG59XG5cbi5oYW1idXJnZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaGFtYnVyZ2VyIC5saW5lIHtcbiAgd2lkdGg6IDhyZW07XG4gIGhlaWdodDogMXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMXJlbSBhdXRvO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1Ljg3NWVtKSB7XG4gIC53cmFwcGVyIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG5cbiAgLmhlYWRlcl9fd3JhcCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAubmF2IHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgICBsaW5lLWhlaWdodDogNC44cmVtO1xuICAgIHotaW5kZXg6IDI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTByZW07XG4gICAgbGVmdDogLTEuNXJlbTtcbiAgICByaWdodDogLTEuNXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICBwYWRkaW5nOiAzcmVtO1xuICB9XG5cbiAgLm5hdi5hY3RpdmUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gICAgdHJhbnNpdGlvbjogMC41cztcbiAgfVxuXG4gIC5uYXZfX2xpc3Qge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICB9XG5cbiAgLm5hdl9faXRlbTpub3QoOmxhc3QtY2hpbGQpOjphZnRlciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5oYW1idXJnZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLmhhbWJ1cmdlci5hY3RpdmUgLmxpbmU6bnRoLWNoaWxkKDEpIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMnJlbSkgcm90YXRlKDQ1ZGVnKTtcbiAgfVxuXG4gIC5oYW1idXJnZXIuYWN0aXZlIC5saW5lOm50aC1jaGlsZCgyKSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuXG4gIC5oYW1idXJnZXIuYWN0aXZlIC5saW5lOm50aC1jaGlsZCgzKSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycmVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgfVxuXG4gIC5pY29uLWFwcGxlIHtcbiAgICBoZWlnaHQ6IDZyZW07XG4gICAgd2lkdGg6IDUuNXJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDI1LjkzNzVlbSkgYW5kIChtYXgtd2lkdGg6IDQ4ZW0pIHtcbiAgLmhlYWRlcl9fd3JhcCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbi5jYXJkX19pbWcge1xuICB3aWR0aDogMTByZW07XG59XG5cbi5vZmZlcl9fd3JhcCB7XG4gIGhlaWdodDogNzkuMXJlbTtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3Bob25lcy5qcGdcIikgbm8tcmVwZWF0IGJvdHRvbS9jb250YWluO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubWFpbl9fdGl0bGUge1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDJyZW07XG4gIGxpbmUtaGVpZ2h0OiAyLjRyZW07XG4gIG1hcmdpbi1ib3R0b206IDIuNHJlbTtcbn1cblxuLm9mZmVyX190aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDIuNHJlbTtcbn1cblxuLm9mZmVyX19wcmljZSB7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgbGluZS1oZWlnaHQ6IDIuM3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogMi4zcmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjUuODc1ZW0pIHtcbiAgLm9mZmVyX193cmFwIHtcbiAgICBoZWlnaHQ6IDY1cmVtO1xuICB9XG5cbiAgLm1haW5fX3RpdGxlIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgICBsaW5lLWhlaWdodDogNC44cmVtO1xuICB9XG5cbiAgLm9mZmVyX19wcmljZSB7XG4gICAgZm9udC1zaXplOiA0cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDQuNnJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDI1LjkzNzVlbSkgYW5kIChtYXgtd2lkdGg6IDQ4ZW0pIHtcbiAgLm9mZmVyX193cmFwIHtcbiAgICBoZWlnaHQ6IDYwcmVtO1xuICB9XG59XG4uYnRuIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwYWRkaW5nOiAxLjhyZW0gMi4zcmVtO1xuICBiYWNrZ3JvdW5kOiAjMDA3MUUzO1xuICBib3JkZXItcmFkaXVzOiAzcmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDJyZW07XG4gIGxpbmUtaGVpZ2h0OiAyLjNyZW07XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG4ub2ZmZXJfX3dyYXB7YmFja2dyb3VuZDp1cmwoXCIuLi9pbWcvcGhvbmVzLndlYnBcIikgbm8tcmVwZWF0IGJvdHRvbS9jb250YWlufVxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDI1Ljg3NWVtKXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtaW4td2lkdGg6IDI1LjkzNzVlbSkgYW5kIChtYXgtd2lkdGg6IDQ4ZW0pe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1pbi13aWR0aDogNDguMDYyNWVtKSBhbmQgKG1heC13aWR0aDogNjRlbSl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cbiIsIkBpbXBvcnQgXCJ2YXIuc2Nzc1wiO1xyXG5cclxuaHRtbCB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XHJcbiAgICBmb250LXNpemU6IDAuNjI1dnc7IC8vINC90LAg0YDQsNC30YDQtdGI0LXQvdC40LggMTkyMCAwLjUyMDgzNCA9PT0gMTBweFxyXG4gICAgZm9udC1mYW1pbHk6IFwiU0YgVUkgVGV4dFwiLCBzYW5zLXNlcmlmOyAvLyDRiNGA0LjRhNGCINC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOINC/0L4g0YHQsNC50YLRg1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIHRleHQtcmVuZGVyaW5nOiBhdXRvO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcclxufVxyXG5cclxuKixcclxuKjo6YWZ0ZXIsXHJcbio6OmJlZm9yZSB7XHJcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG59XHJcblxyXG4qOmZvY3VzOm5vdCg6Zm9jdXMtdmlzaWJsZSkge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgdGV4dC1yZW5kZXJpbmc6IGF1dG87XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgY29sb3I6ICRjb2xvci1ibGFjazsgLy8g0YbQstC10YIg0L/QviDRg9C80L7Qu9GH0LDQvdC40Y4g0YLQtdC60YHRgtCwINC/0L4g0YHQsNC50YLRg1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlOyAvLyDRhtCy0LXRgiDRhNC+0L3QsCDRgdCw0LnRgtCwINC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOXHJcbn1cclxuXHJcbmEsXHJcbmE6aG92ZXIge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG5pbnB1dCxcclxudGV4dGFyZWEge1xyXG4gICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5pbnB1dCxcclxuYnV0dG9uIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbmEsXHJcbnRleHRhcmVhIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250OiBpbmhlcml0O1xyXG4gICAgY29sb3I6IGluaGVyaXQ7XHJcblxyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAmOmFjdGl2ZSB7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgLy8gb2JqZWN0LWZpdDogY29udGFpbjtcclxufVxyXG5cclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNiB7XHJcbiAgICBmb250OiBpbmhlcml0O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxucCB7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuY29kZSxcclxua2JkLFxyXG5zYW1wIHtcclxuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcclxuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgZm9udDogaW5oZXJpdDtcclxuICAgIHRleHQtYWxpZ246IGluaGVyaXQ7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcclxuICAgIHRleHQtcmVuZGVyaW5nOiBhdXRvO1xyXG59XHJcblxyXG51bCB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG5cclxuICAgIGxpIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXSB7XHJcbiAgICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufVxyXG5cclxuI292ZXJsYXkge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgICB0b3A6IDEzcmVtOztcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDQsIDUyLCA3MywgMC43NSk7XHJcbn1cclxuXHJcbiNvdmVybGF5LmFjdGl2ZSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLndyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbm1haW4ge1xyXG4gICAgZmxleDogMSAwIGF1dG87XHJcbn1cclxuXHJcbmZvb3RlciB7XHJcbiAgICBmbGV4OiAwIDAgYXV0bztcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTI5cmVtO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiAyNS44NzVlbSkge1xyXG4gICAgaHRtbCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjU2MjV2dztcclxuICAgIH1cclxuXHJcbiAgICAuY29udGFpbmVyIHtcclxuICAgICAgICBwYWRkaW5nOiAwIDEuNXJlbTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDI1LjkzNzVlbSkgYW5kIChtYXgtd2lkdGg6IDQ4ZW0pIHtcclxuICAgIGh0bWwge1xyXG4gICAgICAgIC8vIGZvbnQtc2l6ZTogNXB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yMDc3M3Z3OyAvLyBmb250LXNpemU6ICgxMDAvNDE0KSAqIDV2dzsgLy8g0LPQtNC1IDQxNCDRjdGC0L4g0YjQuNGA0LjQvdCwINC80L7QsSDQstC10YDRgdC40Lgg0LzQsNC60LXRgtCwXHJcbiAgICAgICAgLy8gZm9udC1zaXplOiAoMTAwLzMyMCkgKiA1dnc7IC8vINCz0LTQtSAzMjAg0Y3RgtC+INGI0LjRgNC40L3QsCDQvNC+0LEg0LLQtdGA0YHQuNC4INC80LDQutC10YLQsFxyXG4gICAgICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAuY29udGFpbmVyIHtcclxuICAgICAgICBwYWRkaW5nOiAwIDNyZW07XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNDguMDYyNWVtKSBhbmQgKG1heC13aWR0aDogNjRlbSkge1xyXG4gICAgaHRtbCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjY1MTA0MnZ3O1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbi5ub25lIHtcclxuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmJsb2NrIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi8vIDIzIiwiJGNvbG9yLWJsYWNrOiAjMDAwMDAwO1xyXG4kY29sb3ItYmx1ZTogIzAwNzFFMztcclxuJGNvbG9yLWdyZXk6ICNDOUM5Qzk7XHJcbiRjb2xvci13aGl0ZTogI0ZGRkZGRjsiLCIudGl0bGUge1xyXG4gICAgQGluY2x1ZGUgZm9udCg1MDAsIDMuNHJlbSwgNC4xcmVtKTtcclxufVxyXG5cclxuXHJcbkBpbmNsdWRlIHNQaG9uZSB7XHJcbiAgICAudGl0bGUge1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnQoNTAwLCA2cmVtLCA4LjJyZW0pO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxufSIsIkBtaXhpbiBmb250ICgkd2VpZ2h0LCAkc2l6ZSwgJGhlaWdodCkge1xyXG4gICAgZm9udC13ZWlnaHQ6ICR3ZWlnaHQ7XHJcbiAgICBmb250LXNpemU6ICRzaXplO1xyXG4gICAgbGluZS1oZWlnaHQ6ICRoZWlnaHQ7XHJcbn1cclxuXHJcbkBtaXhpbiBzUGhvbmUge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDI1Ljg3NWVtKSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBwaG9uZSB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMjUuOTM3NWVtKSBhbmQgKG1heC13aWR0aDogNDhlbSkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gdGFibGV0IHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA0OC4wNjI1ZW0pIGFuZCAobWF4LXdpZHRoOiA2NGVtKSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBkZXNrdG9wIHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA2NC4wNjI1ZW0pIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGZsZXhDZW50ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuICBcclxuQG1peGluIGZsZXhTcGFjZUJldHdlZW4ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuQG1peGluIGZsZXhDZW50ZXJDZW50ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufSIsIi5pbWcge1xyXG4gICAgd2lkdGg6IDUwcmVtO1xyXG59IiwiLmhlYWRlciB7XHJcbiAgICBwYWRkaW5nOiAzcmVtIDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHJlbTtcclxufVxyXG5cclxuLmhlYWRlcl9fd3JhcCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogMTEzcmVtO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmljb24tYXBwbGUge1xyXG4gICAgaGVpZ2h0OiA0cmVtO1xyXG4gICAgd2lkdGg6IDMuNXJlbTtcclxufVxyXG5cclxuLm5hdiB7XHJcbiAgICBAaW5jbHVkZSBmb250KDQwMCwgMnJlbSwgMi40cmVtKTtcclxufVxyXG5cclxuLm5hdl9fbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4ubmF2X19pdGVtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ubmF2X19pdGVtOm5vdCg6bGFzdC1jaGlsZCk6OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogLjFyZW07XHJcbiAgICBoZWlnaHQ6IDRyZW07XHJcbiAgICBiYWNrZ3JvdW5kOiAjQzlDOUM5O1xyXG4gICAgbWFyZ2luOiAwIDIuNXJlbTtcclxufVxyXG5cclxuLmhhbWJ1cmdlciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uaGFtYnVyZ2VyIC5saW5lIHtcclxuICAgIHdpZHRoOiA4cmVtO1xyXG4gICAgaGVpZ2h0OiAxcmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiAxcmVtIGF1dG87XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuQGluY2x1ZGUgc1Bob25lIHtcclxuICAgIC53cmFwcGVyIHtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgfVxyXG4gICAgLmhlYWRlcl9fd3JhcCB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICAubmF2IHtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNHJlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogNC44cmVtO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMTByZW07XHJcbiAgICAgICAgbGVmdDogLTEuNXJlbTtcclxuICAgICAgICByaWdodDogLTEuNXJlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcclxuICAgICAgICBwYWRkaW5nOiAzcmVtO1xyXG4gICAgfVxyXG4gICAgLm5hdi5hY3RpdmUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogLjVzO1xyXG4gICAgfVxyXG4gICAgLm5hdl9fbGlzdCB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICAubmF2X19pdGVtIHtcclxuICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzcmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5uYXZfX2l0ZW06bm90KDpsYXN0LWNoaWxkKTo6YWZ0ZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgfVxyXG4gICAgLmhhbWJ1cmdlciB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICAuaGFtYnVyZ2VyLmFjdGl2ZSAubGluZTpudGgtY2hpbGQoMSkge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycmVtKSByb3RhdGUoNDVkZWcpO1xyXG4gICAgfVxyXG4gICAgLmhhbWJ1cmdlci5hY3RpdmUgLmxpbmU6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG4gICAgLmhhbWJ1cmdlci5hY3RpdmUgLmxpbmU6bnRoLWNoaWxkKDMpIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJyZW0pIHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgfVxyXG4gICAgLmljb24tYXBwbGUge1xyXG4gICAgICAgIGhlaWdodDogNnJlbTtcclxuICAgICAgICB3aWR0aDogNS41cmVtO1xyXG4gICAgfVxyXG59XHJcblxyXG5AaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAuaGVhZGVyX193cmFwIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxufVxyXG5cclxuIiwiLmNhcmRfX2ltZyB7XHJcbiAgICB3aWR0aDogMTByZW07XHJcbn0iLCIub2ZmZXJfX3dyYXAge1xyXG4gICAgaGVpZ2h0OiA3OS4xcmVtO1xyXG4gICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvcGhvbmVzLmpwZycpIG5vLXJlcGVhdCBib3R0b20gLyBjb250YWluO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ubWFpbl9fdGl0bGUge1xyXG4gICAgQGluY2x1ZGUgZm9udCg1MDAsIDJyZW0sIDIuNHJlbSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyLjRyZW07XHJcbn1cclxuXHJcbi5vZmZlcl9fdGl0bGUge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMi40cmVtO1xyXG59XHJcblxyXG4ub2ZmZXJfX3ByaWNlIHtcclxuICAgIEBpbmNsdWRlIGZvbnQoMzAwLCAycmVtLCAyLjNyZW0pO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMi4zcmVtO1xyXG59XHJcblxyXG5AaW5jbHVkZSBzUGhvbmUge1xyXG4gICAgLm9mZmVyX193cmFwIHtcclxuICAgICAgICBoZWlnaHQ6IDY1cmVtO1xyXG4gICAgfVxyXG4gICAgLm1haW5fX3RpdGxlIHtcclxuICAgICAgICBAaW5jbHVkZSBmb250KDUwMCwgNHJlbSwgNC44cmVtKTtcclxuICAgIH1cclxuICAgIC5vZmZlcl9fcHJpY2Uge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNHJlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0LjZyZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbkBpbmNsdWRlIHBob25lIHtcclxuICAgIC5vZmZlcl9fd3JhcCB7XHJcbiAgICAgICAgaGVpZ2h0OiA2MHJlbTtcclxuICAgIH1cclxufVxyXG4iLCIuYnRuIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHBhZGRpbmc6IDEuOHJlbSAyLjNyZW07XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItYmx1ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNyZW07XHJcbiAgICBAaW5jbHVkZSBmb250KDUwMCwgMnJlbSwgMi4zcmVtKTtcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbn0iXX0= */