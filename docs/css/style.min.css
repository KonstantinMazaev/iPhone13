@font-face{font-family:"SF UI Text";src:url(../fonts/SFUIText-Light.eot);src:url(../fonts/SFUIText-Light.eot?#iefix) format("embedded-opentype"),url(../fonts/SFUIText-Light.woff2) format("woff2"),url(../fonts/SFUIText-Light.woff) format("woff"),url(../fonts/SFUIText-Light.ttf) format("truetype");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:"SF UI Text";src:url(../fonts/SFUIText-Regular.eot);src:url(../fonts/SFUIText-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/SFUIText-Regular.woff2) format("woff2"),url(../fonts/SFUIText-Regular.woff) format("woff"),url(../fonts/SFUIText-Regular.ttf) format("truetype");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"SF UI Text";src:url(../fonts/SFUIText-Medium.eot);src:url(../fonts/SFUIText-Medium.eot?#iefix) format("embedded-opentype"),url(../fonts/SFUIText-Medium.woff2) format("woff2"),url(../fonts/SFUIText-Medium.woff) format("woff"),url(../fonts/SFUIText-Medium.ttf) format("truetype");font-weight:500;font-style:normal;font-display:swap}html{font:.625vw "SF UI Text",sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth;text-rendering:auto;margin:0;padding:0;height:100%;-webkit-text-size-adjust:100%}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}:focus:not(:focus-visible){outline:0}body{background:#fff;font-style:normal;font-weight:400;text-rendering:auto;margin:0;padding:0;height:100%;color:#000}a,a:hover{text-decoration:none}input,textarea{line-height:inherit;margin:0;padding:0}input{border:0}a,button,input,textarea{outline:0;cursor:pointer}a,input,textarea{font:inherit;color:inherit}a:focus,button:focus,input:focus,textarea:focus{outline:0}a:active,button:active,input:active,textarea:active{outline:0}img{width:100%;height:auto}button,h1,h2,h3,h4,h5,h6{font:inherit}p{margin-top:0;margin-bottom:0}code,kbd,samp{font:inherit monospace,monospace}button{background:inherit;border:0;color:inherit;text-align:inherit;padding:0;text-rendering:auto}h1,h2,h3,h4,h5,h6,ul,ul li{padding:0;margin:0}ul li{list-style:none}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}#overlay{background:rgba(44,52,73,.75);display:none;position:absolute;z-index:2;top:13rem;right:0;bottom:0;left:0}#overlay.active{display:block}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:100%}main{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}footer{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.container{width:129rem;margin:0 auto}.none{display:none!important}.block{display:block!important}.title{font-weight:500;font-size:3.4rem;line-height:4.1rem}.img{width:50rem}.header{padding:3rem 0;margin-bottom:10rem}.header__wrap{position:relative;width:113rem;margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.icon-apple{height:4rem;width:3.5rem}.nav{font-weight:400;font-size:2rem;line-height:2.4rem}.nav__item,.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex}.nav__item{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.nav__item:not(:last-child)::after{content:"";display:block;width:.1rem;height:4rem;background:#c9c9c9;margin:0 2.5rem}.hamburger{display:none}.hamburger .line{background:#000;width:8rem;height:1rem;display:block;margin:1rem auto;-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.card__img{width:10rem}.offer__wrap{height:79.1rem;background:url(../img/phones.jpg) no-repeat bottom/contain;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.main__title{font-weight:500;font-size:2rem;line-height:2.4rem}.main__title,.offer__title{margin-bottom:2.4rem}.btn,.offer__price{font-size:2rem;line-height:2.3rem}.offer__price{font-weight:300;margin-bottom:2.3rem}.btn{cursor:pointer;padding:1.8rem 2.3rem;background:#0071e3;border-radius:3rem;font-weight:500;color:#fff}@supports (-webkit-appearance:none){.offer__wrap{background:url(../img/phones.webp) no-repeat bottom/contain}}@media (max-width:25.875em){html{font-size:1.5625vw}.container{padding:0 1.5rem;width:100%}.title{font-weight:500;font-size:6rem;line-height:8.2rem;text-align:center}.wrapper{overflow:hidden}.header__wrap{width:100%}.nav{font-weight:400;font-size:4rem;line-height:4.8rem;z-index:2;position:absolute;top:10rem;left:-1.5rem;right:-1.5rem;background-color:#fff;-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);padding:3rem}.nav.active{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.hamburger,.nav__list{display:block}.nav__item:not(:last-child){margin-bottom:3rem}.nav__item:not(:last-child)::after{display:none}.hamburger.active .line:nth-child(1){-webkit-transform:translateY(2rem) rotate(45deg);-ms-transform:translateY(2rem) rotate(45deg);transform:translateY(2rem) rotate(45deg)}.hamburger.active .line:nth-child(2){opacity:0}.hamburger.active .line:nth-child(3){-webkit-transform:translateY(-2rem) rotate(-45deg);-ms-transform:translateY(-2rem) rotate(-45deg);transform:translateY(-2rem) rotate(-45deg)}.icon-apple{height:6rem;width:5.5rem}.offer__wrap{height:65rem}.main__title{font-weight:500;font-size:4rem;line-height:4.8rem}.offer__price{font-size:4rem;margin-bottom:4.6rem}}@media (min-width:25.9375em) and (max-width:48em){html{font-size:1.20773vw;-webkit-text-size-adjust:none}.container{padding:0 3rem;width:100%}.header__wrap{width:100%}.offer__wrap{height:60rem}}@media (min-width:48.0625em) and (max-width:64em){html{font-size:.651042vw}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */